name: named_entity_recognition_data_aml_pipeline
on:
  # workflow_call allows reusable workflow that can be called by other workflows
  workflow_call:
    inputs:
      subscription_id:
        description: Azure subscription id
        type: string
        required: true      
      resource_group_name:
        description: Azure resource group name
        type: string
        required: true
      workspace_name:
          description: Azure ML workspace name
          type: string
          required: true
      aml_env_name:
            description: Environment name
            type: string
            required: true
      config_path_root_dir:
              description: Root dir for config file
              type: string
              required: true
              default: "named_entity_recognition"
      sa_acc_key:
                description: Storage account key
                type: string
                required: true
                default: ""

  # workflow_dispatch allows to run workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      subscription_id:
        description: Azure subscription id
        type: string
        required: true      
      resource_group_name:
        description: Azure resource group name
        type: string
        required: true
      workspace_name:
          description: Azure ML workspace name
          type: string
          required: true
      aml_env_name:
            description: Environment name
            type: string
            required: true
      config_path_root_dir:
              description: Root dir for config file
              type: string
              required: true
              default: "named_entity_recognition"
      sa_acc_key:
                description: Storage account key
                type: string
                required: true
                default: ""
              
jobs:
  deploy_aml_data_pipeline:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout current repository
        uses: actions/checkout@v3.3.0

      - name: Set up python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Azure login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
    
      - name: Configure Azure ML Agent
        uses: ./.github/actions/configure_azureml_agent

      - name: load the current Azure subscription details
        id: subscription_details
        shell: bash
        run: |
          export subscriptionId=$(az account show --query id -o tsv)
          echo "SUBSCRIPTION_ID=$subscriptionId" >> $GITHUB_OUTPUT

      - name: Deploy data pipeline
        uses: ./.github/actions/execute_script
        with:
          step_name: "Deploy data pipeline"
          script_parameter: |
            python -m dataops.common.aml_pipeline \
            --subscription_id ${{ inputs.subscription_id }} \
            --resource_group_name ${{ inputs.resource_group_name }} \
            --workspace_name ${{ inputs.workspace_name }} \
            --aml_env_name ${{ inputs.aml_env_name }} \
            --config_path_root_dir ${{ inputs.config_path_root_dir }} \
            --sa_acc_key ${{ inputs.sa_acc_key }}

      - name: Create data store
        uses: ./.github/actions/execute_script
        with:
          step_name: "Create data store"
          script_parameter: |
            python -m dataops.common.aml_data_store \
            --subscription_id ${{ inputs.subscription_id }} \
            --resource_group_name ${{ inputs.resource_group_name }} \
            --workspace_name ${{ inputs.workspace_name }} \
            --sa_acc_key ${{ inputs.sa_acc_key }} \
            --config_path_root_dir ${{ inputs.config_path_root_dir }}

      - name: Register data asset
        uses: ./.github/actions/execute_script
        with:
          step_name: "Register data asset"
          script_parameter: |
            python -m dataops.common.aml_data_asset \
            --subscription_id ${{ inputs.subscription_id }} \
            --resource_group_name ${{ inputs.resource_group_name }} \
            --workspace_name ${{ inputs.workspace_name }} \
            --config_path_root_dir ${{ inputs.config_path_root_dir }}      